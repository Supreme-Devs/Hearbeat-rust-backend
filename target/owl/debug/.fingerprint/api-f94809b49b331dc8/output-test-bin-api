{"$message_type":"diagnostic","message":"enum takes 2 generic arguments but 1 generic argument was supplied","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"api/src/main.rs","byte_start":34,"byte_end":40,"line_start":2,"line_end":2,"column_start":20,"column_end":26,"is_primary":true,"text":[{"text":"async fn main() -> Result<()> {","highlight_start":20,"highlight_end":26}],"label":"expected 2 generic arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"api/src/main.rs","byte_start":41,"byte_end":43,"line_start":2,"line_end":2,"column_start":27,"column_end":29,"is_primary":false,"text":[{"text":"async fn main() -> Result<()> {","highlight_start":27,"highlight_end":29}],"label":"supplied 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"add missing generic argument","code":null,"level":"help","spans":[{"file_name":"api/src/main.rs","byte_start":43,"byte_end":43,"line_start":2,"line_end":2,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"async fn main() -> Result<()> {","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":", E","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: enum takes 2 generic arguments but 1 generic argument was supplied\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapi/src/main.rs:2:20\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0masync fn main() -> Result<()> {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 1 generic argument\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 2 generic arguments\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add missing generic argument\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0masync fn main() -> Result<()\u001b[0m\u001b[0m\u001b[38;5;10m, E\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
2025-08-20T12:44:42.319Z INFO  [rustowlc::core] start borrowck of DefId(0:3 ~ api[92bd]::main)
2025-08-20T12:44:42.320Z INFO  [rustowlc::core::analyze] facts of DefId(0:3 ~ api[92bd]::main) prepared; start analyze of DefId(0:3 ~ api[92bd]::main)
2025-08-20T12:44:42.321Z INFO  [rustowlc::core] borrow checked: 1 / 3
2025-08-20T12:44:42.321Z INFO  [rustowlc::core] start borrowck of DefId(0:4 ~ api[92bd]::main::{closure#0})
2025-08-20T12:44:42.321Z INFO  [rustowlc::core::analyze] start re-computing borrow check with dump: true
2025-08-20T12:44:42.322Z INFO  [rustowlc::core::analyze] facts of DefId(0:4 ~ api[92bd]::main::{closure#0}) prepared; start analyze of DefId(0:4 ~ api[92bd]::main::{closure#0})
2025-08-20T12:44:42.322Z INFO  [rustowlc::core] borrow checked: 2 / 3
2025-08-20T12:44:42.322Z INFO  [rustowlc::core::analyze] borrow check finished
2025-08-20T12:44:42.322Z INFO  [rustowlc::core::analyze] start re-computing borrow check with dump: true
2025-08-20T12:44:42.322Z INFO  [rustowlc::core::analyze] borrow check finished
2025-08-20T12:44:42.322Z INFO  [rustowlc::core] start borrowck of DefId(0:5 ~ api[92bd]::main#1)
2025-08-20T12:44:42.323Z INFO  [rustowlc::core::analyze] facts of DefId(0:5 ~ api[92bd]::main#1) prepared; start analyze of DefId(0:5 ~ api[92bd]::main#1)
2025-08-20T12:44:42.323Z INFO  [rustowlc::core] borrow checked: 3 / 3
2025-08-20T12:44:42.323Z INFO  [rustowlc::core::analyze] start re-computing borrow check with dump: true
2025-08-20T12:44:42.323Z INFO  [rustowlc::core] analyzed one item of /Users/subhajitchaudhury/Desktop/code-playground/projects/betterstack/betterstack-rust/api/src/main.rs
2025-08-20T12:44:42.323Z INFO  [rustowlc::core] analyzed one item of /Users/subhajitchaudhury/Desktop/code-playground/projects/betterstack/betterstack-rust/api/src/main.rs
2025-08-20T12:44:42.323Z INFO  [rustowlc::core::analyze] borrow check finished
2025-08-20T12:44:42.323Z INFO  [rustowlc::core] analyzed one item of /Users/subhajitchaudhury/Desktop/code-playground/projects/betterstack/betterstack-rust/api/src/main.rs
{"$message_type":"diagnostic","message":"aborting due to 1 previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 1 previous error\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0107`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0107`.\u001b[0m\n"}
